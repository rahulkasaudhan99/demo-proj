replicaCount: 1
memory_limit: 500

resources:
  requests:
    cpu: "0.2"
  limits:
    cpu: "0.5"

container:
  ports:
    - name: http
      containerPort: 8080
      servicePort: 80
      protocol: TCP

ingress:
  internal:
    enabled: true
    port: http

healthChecks:
  livenessProbe:
    httpGet:
      path: /actuator/info
      port: http
    initialDelaySeconds: 60
    timeoutSeconds: 5
    successThreshold: 1
    periodSeconds: 20
    failureThreshold: 3
  readinessProbe:
    httpGet:
      path: /actuator/info
      port: http
    initialDelaySeconds: 60
    timeoutSeconds: 5
    successThreshold: 1
    periodSeconds: 20
    failureThreshold: 3
    
serviceMonitor:
  enabled: true
  path: /actuator/prometheus
  port: http
  
extraVarsFrom:
  - secretRef:
      name: shipitem-db-secret
      
extraVars:
  - name: SPRING_CONFIG_LOCATION
    value: "/spring/config/"
  - name: POSTGRES_HOST
    valueFrom:
      secretKeyRef:
        name: shipitem-db-secret
        key: POSTGRES_HOST
  - name: POSTGRES_HOSTNAME_SHORT
    valueFrom:
      secretKeyRef:
        name: shipitem-db-secret
        key: POSTGRES_HOSTNAME_SHORT
  - name: POSTGRES_PORT
    valueFrom:
      secretKeyRef:
        name: shipitem-db-secret
        key: POSTGRES_PORT   
  - name: POSTGRES_DB_ENDPOINT
    value: "$(POSTGRES_HOST):$(POSTGRES_PORT)"
  - name: POSTGRES_DB_NAME
    valueFrom:
      secretKeyRef:
        name: shipment-db-secret
        key: POSTGRES_DB
  - name: POSTGRES_DB_ENDPOINT_DB_PARAM
    value: "?ssl=true&sslmode=require"

configMaps:
  /spring/config:
    inline:
      - name: application.properties
        content: |-
          logging.level.root=info
          spring.datasource.username=${POSTGRES_DB_USER}@${POSTGRES_HOSTNAME_SHORT}
          spring.datasource.password=${POSTGRES_DB_PASSWORD}
          spring.datasource.url=jdbc:postgresql://${POSTGRES_DB_ENDPOINT}/${POSTGRES_DB_NAME}${POSTGRES_DB_ENDPOINT_DB_PARAM}&currentSchema=SHIPMENT
          spring.datasource.hikari.maximum-pool-size=10
          spring.datasource.type=com.zaxxer.hikari.HikariDataSource
          spring.datasource.hikari.minimum-idle=3
          spring.datasource.hikari.auto-commit=true
          
          server.port=8080
          
          spring.main.allow-circular-references=true
          
          commoncodes.statusQuality.url=https://shipment-common-data-service-development-tss-dev.tnt-001.tntnpk.az.fxei.fedex.com/commoncodes/v1/statusQuality/{statusCode}/{languageCode}
          release.intercept.url=https://shipment-intercept-development-tss-dev.tnt-001.tntnpk.az.fxei.fedex.com/shipment-intercepts/v1/shipments/{shipmentUuId}/intercept-operations
          intercept.search.url=https://shipment-intercept-development-tss-dev.tnt-001.tntnpk.az.fxei.fedex.com/shipment-intercepts/v1/shipments/{shipmentUuId}/intercepts/search
          add.status.url=https://shipment-item-status-development-tss-dev.tnt-001.tntnpk.az.fxei.fedex.com/shipment-item/v1/status
          endpoint.cs.depot=http://shipment-location-development/shipmentlocation/v1/legacyDepot
          endpoint.def.warehouse=https://shipment-common-data-service-development-tss-dev.tnt-001.tntnpk.az.fxei.fedex.com/commoncodes/v1/defaultWarehouse/{businessLocationId}/{effectiveDate}
          endpoint.date.time=https://shipment-common-data-service-development-tss-dev.tnt-001.tntnpk.az.fxei.fedex.com/commoncodes/v1/depotTime/{businessLocationId}/{effectiveDate}
          endpoint.identification=https://shipment-identification-development-tss-dev.tnt-001.tntnpk.az.fxei.fedex.com/shipment-identification/v1/item-identifiers/
          # Spring Redis Cache Properties
          spring.cache.type=redis
          spring.redis.host=${REDIS_HOST}
          spring.redis.port=${REDIS_PORT}
          spring.redis.password=${REDIS_PASS}
          spring.redis.ssl=${REDIS_SSL}
          redis.cache.default.ttl=14400
          
          #AMQ BROKER CONFIG
          broker.urls=${AMQ_URL}
          spring.activemq.users=${AMQ_USER}|${AMQ_USER}
          spring.activemq.passwords=${AMQ_PSWD}|${AMQ_PSWD}
          spring.activemq.pool.enabled=false
          activemq.max.connections=15
          activemq.idle.timeout=900000
           
         
          service01.camel-components: amq1, amq2
          service01.inheritErrorFlag: false
          service01.roundRobinFlag: true
          service01.stickyFlag: false
          spring.service.name=shipment-item 
          #spring.activemq.pool.max-connections=10

          scatter.queue.name=tss.item.shipment.add.sos.q
          scatter.backout.queue.name=tss.item.shipment.backout.sos.q
          gather.queue.name=tss.sosgather.shipment.add.multi.q
          scatter.update.item.queue.name=tss.item.shipment.update.sos.q?jmsMessageType=Object&concurrentConsumers=2
          gather.update.queue.name=tss.sosgather.shipment.update.multi.q
          
          item.actuals.queue.name=tss.item.wtdim.update.sos.q
          gather.partial.update.queue.name=tss.sosgather.shipment.partialupdate.multi.q
          item.actuals.queue.name.backout=tss.item.wtdim.backout.sos.q
          
          distribution.update.queue.name=tss.audit.shipment.update.multi.q
          ################################################
          #
          # Default configuration.
          # Gets inherited by the other environments.
          # Individual environment-specific property files in this folder then override relevant properties
          #
          #################################################
          
          management.security.enabled:true
          management.endpoint.info.enabled:true
          management.endpoint.health.enabled:true
          management.endpoint.shutdown.enabled:false
          management.endpoint.heapdump.enabled=true
          management.endpoint.threaddump.enabled=true
          management.endpoints.jmx.exposure.include:health,info
          management.endpoints.web.exposure.include=health,info,metrics,prometheus
          endpoints.health.sensitive:false
          security.basic.enabled:true
          management.endpoint.health.show-details:always
          management.server.ssl.enabled:false
          management.endpoint.metrics.enabled:true
          management.endpoint.prometheus.enabled:true
          management.metrics.export.prometheus.enabled:true
          management.endpoints.jmx.exposure.include:health,info
          management.port:9082
          #Added for application info
          info.app.name=Shipment Item Development
          info.app.description=This service takes care of the add /update pieces within a shipment.
          info.app.version=1.0.0
prometheusRules:
  groups:
    - name: Shipment Item Development
      rules:
        - alert: Multiple Errors
          expr: sum(increase(logback_events_total{namespace="tss-dev",job="shipment-item-development",level="error"}[30m])) by (job, namespace) > 12
          labels:
            severity: warning
            assignment_group: TNT_SPT_GLB_TSSINFOSYS
          annotations:
            description: "There are {{ $value }} errors detected in {{ $labels.namespace }} - {{ $labels.job }} for the last 30 minutes."
            message: "This is Shipment Item Development alert message for Multiple Errors"
        - alert: InstanceDown
          expr: up{job="shipment-item-development"} == 0
          for: 5m
          labels:
            severity: warning
            assignment_group: TNT_SPT_GLB_TSSINFOSYS
          annotations:
            summary: "Instance {{ $labels.instance }} down"
            description: "{{ $labels.instance }} of job {{ $labels.job }} has been down for more than 5 minutes."
            message: "This is Shipment Item Development Instance down message"
        - alert: Low free space
          expr: (node_filesystem_free{mountpoint !~ "/mnt.*"} / node_filesystem_size{mountpoint !~ "/mnt.*"} * 100) < 15
          for: 1m
          labels:
            severity: warning
            assignment_group: TNT_SPT_GLB_TSSINFOSYS
          annotations:
            title: Low free space on {{ $labels.instance }}
            description: On {{ $labels.instance }} device {{ $labels.device }} mounted on {{ $labels.mountpoint }} has low free space of {{ $value }}%
            message: "This is Shipment Item Development alert message for Low free space"
        - alert: PrometheusTargetEmpty
          expr: prometheus_sd_discovered_targets == 0
          for: 0m
          labels:
            severity: critical
            assignment_group: TNT_SPT_GLB_TSSINFOSYS
          annotations:
            summary: Prometheus target empty (instance {{ $labels.instance }})
            description: Prometheus has no target in service discovery 
            message: "This is Shipment Item Development alert message for PrometheusTargetEmpty"
        - alert: JvmMemoryFillingUp
          expr: (sum by (instance)(jvm_memory_used_bytes{area="heap"}) / sum by (instance)(jvm_memory_max_bytes{area="heap"})) * 100 > 80
          for: 5m
          labels:
            severity: warning
            assignment_group: TNT_SPT_GLB_TSSINFOSYS
          annotations:
            summary: JVM memory filling up (instance {{ $labels.instance }})
            description: JVM memory is filling up 
            message: "This is Shipment Item Development alert message for JvmMemoryFillingUp"
        - alert: shipment-item-development-4xx-reponses
          expr: sum(increase(http_server_requests_seconds_count{job="shipment-item-development",namespace="tss-dev",outcome="CLIENT_ERROR"}[30m])) by (job, namespace) > 2
          for: 6m
          labels:
            namespace: tss-dev
            severity: medium
            assignment_group: TNT_SPT_GLB_TSSINFOSYS
          annotations:
            description: "There are {{ $value }} 4xx web client errors detected in {{ $labels.namespace }} - {{ $labels.job }} for the last 30 minutes. Please act!"
            message: "Too many 4xx errors in Shipment Item Development"   
        - alert: shipment-item-development-5xx-reponses
          expr: sum(increase(http_server_requests_seconds_count{job="shipment-item-development",namespace="tss-dev",outcome="SERVER_ERROR"}[30m])) by (job, namespace) > 2
          for: 6m
          labels:
            namespace: tss-dev
            severity: medium
            assignment_group: TNT_SPT_GLB_TSSINFOSYS
          annotations:
            description: "There are {{ $value }} 5xx web client errors detected in {{ $labels.namespace }} - {{ $labels.job }} for the last 30 minutes. Please act!"
            message: "Too many 5xx errors in Item Shipment Item Development"
akv2k8s:
  AMQ_PSWD:
    vault: kv8a88a1cde871449f8f5d16
    type: secret
    secretName: tss-amq-password
  AMQ_URL:
    vault: kv8a88a1cde871449f8f5d16
    type: secret
    secretName: tss-amq-url-v1 
  AMQ_USER:
    vault: kv8a88a1cde871449f8f5d16
    type: secret
    secretName: tss-amq-username
  POSTGRES_DB_USER:
    vault: kv8a88a1cde871449f8f5d16
    type: secret
    secretName: tss-item-db-user
  POSTGRES_DB_PASSWORD:
    vault: kv8a88a1cde871449f8f5d16
    type: secret
    secretName: tss-item-db-password
labels:
  aadpodidbinding: tss-nonprod
